! long_baseline_pipeline_dir = /data5/sean/LC12_022/software/my_long_baseline_pipeline/long_baseline_pipeline
! job_directory              = input.output.job_directory
! num_proc_per_node          = input.output.max_per_node
! scripts			 	             = {{ long_baseline_pipeline_dir }}/bin
! lb_delaycal_directory      = {{ job_directory }}/../LB-Delay-Calibration/
! cal_shift_avg_timestep     = 4
! cal_shift_avg_freqstep     = 4
! phaseup_command            = {ST001:'CS*'}
! filter_command             = '!CS*&*'
! data_col                   = CORRECTED_DATA
! directions_cat             = {{ job_directory }}/../parsets/loop2_directions.csv

pipeline.steps         = [setup, selfcal]
pipeline.steps.setup   = [targetdata_map, targetdata_map_list]
pipeline.steps.selfcal = [loop2]

# generate a mapfile of the loop 3 outputted ms
targetdata_map.control.kind        = plugin
targetdata_map.control.type        = createMapfile
targetdata_map.control.method      = mapfile_from_folder
targetdata_map.control.mapfile_dir = input.output.mapfile_dir
targetdata_map.control.filename    = targetdata_map.mapfile
targetdata_map.control.folder      = {{ job_directory }}
targetdata_map.control.pattern     = *_phasecal.apply_tec

# convert to a mapfile with all subbands in one list
targetdata_map_list.control.kind        = plugin
targetdata_map_list.control.type        = createMapfile
targetdata_map_list.control.method      = mapfile_all_to_one
targetdata_map_list.control.mapfile_dir = input.output.mapfile_dir
targetdata_map_list.control.filename    = combine_data_tar_map.mapfile
targetdata_map_list.control.mapfile_in  = targetdata_map.output.mapfile

# run loop2
loop2.control.type		   	     = pythonplugin
loop2.control.max_per_node     = {{ num_proc_per_node }}
loop2.control.executable	     = {{ scripts }}/hdf5_functions.py
loop2.argument.flags		       = [targetdata_map_list.output.mapfile]
loop2.argument.delaycal_ms     = {{ lb_delaycal_directory }}/L723586_SB001_DE609_removed_12E068069t_130MHz.msdpppconcat
loop2.argument.mtf		         = {{ job_directory }}/mtf.txt
loop2.argument.threshold       = 0.25
loop2.argument.time_step       = {{ cal_shift_avg_timestep }}
loop2.argument.freq_step       = {{ cal_shift_avg_freqstep }}
loop2.argument.cores           = {{ num_proc_per_node }}
loop2.argument.phase_up        = {{ phaseup_command }}
loop2.argument.filter_cmd      = {{ filter_command }}
loop2.argument.column_in       = {{ data_col }}
loop2.argument.loop3_script    = {{ scripts }}/loop3B_v1.py
loop2.argument.directions_file = {{ directions_cat }}
